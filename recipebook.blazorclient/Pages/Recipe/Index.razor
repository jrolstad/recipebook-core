@page "/recipe"
@page "/category/{category}"
@using recipebook.blazorclient.Application.ViewModels
@inject RecipeIndexViewModel ViewModel

<h1 class="display-3">Recipes</h1>
<div class="row">
    <div id="categoryList" class="col-md-2">
        <div class="btn-group">
            <button type="button" class="btn btn-dark dropdown-toggle @ViewModel.CategoryStatus" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Categories
            </button>
            <div class="dropdown-menu">
                @foreach (var categoryItem in ViewModel.Categories)
                {
                    <a class="dropdown-item" href="@categoryItem.Url">@categoryItem.Name</a>
                }
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <div class="input-group mb-3">
            <input type="text" @bind="ViewModel.SearchTerms" class="form-control" placeholder="Search Terms" aria-label="Search Terms" aria-describedby="button-addon2">
            <div class="input-group-append">
                <button class="btn btn-primary @ViewModel.RecipeSearchStatus" type="button" id="button-addon2" @onclick="ViewModel.Search">Search</button>
            </div>
        </div>
    </div>

</div>

<div id="recipeList" class="col-md-12">
    <div class="list-group">
        @foreach (var recipe in ViewModel.Recipes)
        {
            <a href="@recipe.Url" class="list-group-item list-group-item-action">@recipe.Name</a>
        }
    </div>
</div>


@code {
    [Parameter]
    public string Category { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await ViewModel.InitializeParameters(Category);
        await base.OnParametersSetAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.Initialize();
        await base.OnInitializedAsync();
    }

}
